name: homebridge
summary: HomeKit support for the impatient
adopt-info: homebridge
description: |
   Homebridge is a lightweight NodeJS server you can run on your home network that emulates the iOS HomeKit API. It supports Plugins, which are community-contributed modules that provide a basic bridge from HomeKit to various 3rd-party APIs provided by manufacturers of "smart home" devices.

confinement: strict
grade: stable
architectures:
  - build-on: armhf
  - build-on: arm64
  - build-on: amd64

base: core22

# give  hook network access so it can update npm packages if needed
hooks:
  post-refresh:
      plugs:
      - network

layout:
  /usr/include:
    bind: $SNAP/usr/include
  /usr/lib/${CRAFT_ARCH_TRIPLET}/libc_nonshared.a:
    symlink: $SNAP/usr/lib/${CRAFT_ARCH_TRIPLET}/libc_nonshared.a
  /usr/lib/${CRAFT_ARCH_TRIPLET}/perl:
    bind: $SNAP/usr/lib/${CRAFT_ARCH_TRIPLET}/perl

environment:
  npm_config_prefix:           "$SNAP/opt/homebridge"
  PYTHON:                      "/usr/bin/python3"
  HOME:                        "$SNAP_COMMON"
  PATH:                        "$SNAP/opt/homebridge/bin:$SNAP_COMMON/bin:$SNAP/usr/sbin:$SNAP/usr/bin:$SNAP/sbin:$SNAP/bin:$PATH:$SNAP/usr/lib/git-core"
  LDFLAGS:                     "--verbose -L${SNAP}/usr/ -L${SNAP}/usr/lib -L${SNAP}/usr/lib/${CRAFT_ARCH_TRIPLET}/"
  CFLAGS:                      "-I${SNAP}/usr/include/${CRAFT_ARCH_TRIPLET} -I${SNAP}/usr/include"
  CPPFLAGS:                    "-I${SNAP}/usr/include/${CRAFT_ARCH_TRIPLET} -I${SNAP}/usr/include"
  LD_LIBRARY_PATH:             "$SNAP_LIBRARY_PATH:$LD_LIBRARY_PATH:$SNAP/lib:$SNAP/usr/lib:$SNAP/lib/${CRAFT_ARCH_TRIPLET}:$SNAP/usr/lib/${CRAFT_ARCH_TRIPLET}"

apps:
  homebridge:
    command-chain:
      - bin/homebridge-read-settings
      - bin/homebridge-wrapper
    command: opt/homebridge/start.sh --allow-root
    daemon: simple
    restart-condition: always
    plugs:
      - avahi-control
      - network-bind
      - network-observe
      - network-setup-observe
      - log-observe
      - ppp
      - serial-port

  hb-shell:
    command: bin/hb-shell.sh
    plugs:
      - avahi-control
      - network-bind
      - network-observe
      - network-setup-observe
      - log-observe
      - ppp
      - serial-port

  npm:
    command-chain:
      - bin/homebridge-read-settings
    command: bin/npm-wrapper
    plugs:
      - network

  npm-install:
    command-chain:
      - bin/homebridge-read-settings
    command: bin/npm-wrapper install
    plugs:
      - network

  list-installed-packages:
    command-chain:
      - bin/homebridge-read-settings
    command: bin/npm-wrapper ls --depth 0
    plugs:
      - network

  list-outdated-packages:
    command-chain:
      - bin/homebridge-read-settings
    command: bin/npm-wrapper outdated --depth 0
    plugs:
      - network

  update-all-packages:
    command-chain:
      - bin/homebridge-read-settings
    command: bin/npm-update-all
    plugs:
      - network

  help:
    command: bin/homebridge-help

parts:
  homebridge:
    plugin: nil
    stage-packages:
      - homebridge
    override-build: |
      craftctl default
      # fix paths  in helpers
      sed -i \
          -e 's|/opt/homebridge|${SNAP}/opt/homebridge|g' \
          -e 's|/var/lib/homebridge|${SNAP_COMMON}|g' \
          -e 's|systemctl \(.*\) homebridge.service|snapctl \1 ${SNAP_INSTANCE_NAME}.homebridge|g' \
          ${CRAFT_PART_INSTALL}/opt/homebridge/bashrc \
          ${CRAFT_PART_INSTALL}/opt/homebridge/start.sh \
          ${CRAFT_PART_INSTALL}/opt/homebridge/source.sh \
          ${CRAFT_PART_INSTALL}/opt/homebridge/hb-service-shim \
          ${CRAFT_PART_INSTALL}/opt/homebridge/bashrc-hb-shell \
          ${CRAFT_PART_INSTALL}/opt/homebridge/hb-shell

      version=$(sed -n 's/[[:space:]]\+- homebridge=\(.*\)/\1/p' ${CRAFT_PART_BUILD}/..//state/pull)
      craftctl set version=${version}-$(date -Idate)
    stage:
      - -opt/homebridge/bin/corepack
      - -opt/homebridge/bin/node
      - -opt/homebridge/bin/npm
      - -opt/homebridge/bin/npx
      - -opt/homebridge/include
      - -opt/homebridge/lib/node_modules/corepack
      - -opt/homebridge/lib/node_modules/npm
      - -opt/homebridge/share/doc/node
      - -opt/homebridge/share/man/man1/node.1
      - -opt/homebridge/share/share/systemtap/tapset/node.stp

  glue:
    plugin: dump
    source: glue
    stage-packages:
      - build-essential
      - coreutils
      - curl
      - gettext-base
      - git
      - libavahi-compat-libdnssd-dev
      - rsync
    stage:
      - -usr/lib/${CRAFT_ARCH_TRIPLET}/libc_malloc_debug.so

  node:
    source: https://github.com/nodejs/node.git
    plugin: autotools
    build-environment:
      - PATH: "/usr/lib/ccache:${PATH}"
    override-pull: |
      # checkout lastest tag of given LTS version
      git_url="https://github.com/nodejs/node.git"
      major_ver="20"
      tag_version="v${major_ver}"
      tag=$(git ls-remote --tags --refs  --sort='version:refname' "${git_url}" "refs/tags/${tag_version}*" | tail -1 | awk -F '/' '{print $3}')
      git clone ${git_url} --depth=1 --branch ${tag} ${CRAFT_PART_SRC}
      git apply ${CRAFT_PROJECT_DIR}/node-v${major_ver}.x-snap.patch
    autotools-configure-parameters:
      - --prefix=/opt/homebridge
    prime:
      - -opt/homebridge/include

package-repositories:
  - type: apt
    components: [main]
    suites: [stable]
    key-id: ACAA60814A7524504F07DE07DF5B0FE88C8F5D92
    url: https://repo.homebridge.io

build-packages:
  - rdfind
  - symlinks
  - systemtap-sdt-dev
  - libaudit-dev
  - g++
  - wget
  - quilt
  - gawk
  - debhelper
  - python3
  - python3-distutils
  - bison
  - libavahi-compat-libdnssd-dev
  - jq
